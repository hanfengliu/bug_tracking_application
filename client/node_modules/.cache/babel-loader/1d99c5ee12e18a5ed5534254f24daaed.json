{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lhf13\\\\Desktop\\\\projects\\\\Fullstack\\\\bug_tracking_application\\\\client\\\\src\\\\components\\\\ProgrammerInterface.js\",\n    _s = $RefreshSig$();\n\nimport Axios from \"axios\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\nimport BugItems from \"./BugItems\";\nimport Navbar from \"./Navbar\";\nimport Filterbar from \"./Filterbar\";\nimport Searchbar from \"./Searchbar\";\nimport useAuth from \"../hooks/useAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProgrammerInterface = () => {\n  _s();\n\n  const {\n    auth,\n    bugsList,\n    setBugsList,\n    filterList,\n    setFilterList,\n    isLoading,\n    setIsLoading\n  } = useAuth();\n  const [searchBy, setSearchBy] = useState(\"\");\n  const [id, setID] = useState(\"\");\n  const [severity, setSeverity] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  useEffect(() => {\n    setSearchBy(\"ID\");\n    Axios.get(\"http://localhost:3001/getAssignedBugs\", {\n      params: {\n        firstName: auth.firstName,\n        lastName: auth.lastName\n      }\n    }).then(response => {\n      setBugsList(response.data);\n      setFilterList(response.data);\n      setIsLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    console.log(status);\n\n    const filter = () => {\n      setFilterList(searchBy === \"Date\" ? bugsList.filter(bug => {\n        return bug.severity.includes(severity) && (bug.month.toString() + \"/\" + bug.day.toString() + \"/\" + bug.year.toString()).includes(date) && bug.status.includes(status);\n      }) : bugsList.filter(bug => {\n        return bug.severity.includes(severity) && bug.id.toString().includes(id) && bug.status.includes(status);\n      }));\n    };\n\n    filter();\n  }, [severity, status, id, date]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"mx-auto\",\n    fluid: \"md\",\n    style: {\n      maxWidth: \"800px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: \"3\",\n        children: /*#__PURE__*/_jsxDEV(Filterbar, {\n          setSeverity: setSeverity,\n          setStatus: setStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"9\",\n        children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n          searchBy: searchBy,\n          setSearchBy: setSearchBy,\n          id: id,\n          setID: setID,\n          date: date,\n          setDate: setDate,\n          assign: \"Manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BugItems, {\n          isLoading: isLoading,\n          bugsList: filterList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProgrammerInterface, \"YVBTrivljzX5Zxh2MSMhpC9kcJU=\", false, function () {\n  return [useAuth];\n});\n\n_c = ProgrammerInterface;\nexport default ProgrammerInterface;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgrammerInterface\");","map":{"version":3,"sources":["C:/Users/lhf13/Desktop/projects/Fullstack/bug_tracking_application/client/src/components/ProgrammerInterface.js"],"names":["Axios","Row","Col","useEffect","useState","BugItems","Navbar","Filterbar","Searchbar","useAuth","ProgrammerInterface","auth","bugsList","setBugsList","filterList","setFilterList","isLoading","setIsLoading","searchBy","setSearchBy","id","setID","severity","setSeverity","date","setDate","status","setStatus","get","params","firstName","lastName","then","response","data","console","log","filter","bug","includes","month","toString","day","year","maxWidth"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAChC,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,UAJI;AAKJC,IAAAA,aALI;AAMJC,IAAAA,SANI;AAOJC,IAAAA;AAPI,MAQFR,OAAO,EARX;AAUA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,EAAD,EAAKC,KAAL,IAAcjB,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACoB,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACsB,MAAD,EAASC,SAAT,IAAsBvB,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAnB,IAAAA,KAAK,CAAC4B,GAAN,CAAU,uCAAV,EAAmD;AACjDC,MAAAA,MAAM,EAAE;AACNC,QAAAA,SAAS,EAAEnB,IAAI,CAACmB,SADV;AAENC,QAAAA,QAAQ,EAAEpB,IAAI,CAACoB;AAFT;AADyC,KAAnD,EAKGC,IALH,CAKSC,QAAD,IAAc;AACpBpB,MAAAA,WAAW,CAACoB,QAAQ,CAACC,IAAV,CAAX;AACAnB,MAAAA,aAAa,CAACkB,QAAQ,CAACC,IAAV,CAAb;AACAjB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KATD;AAUD,GAZQ,EAYN,EAZM,CAAT;AAcAd,EAAAA,SAAS,CAAC,MAAM;AACdgC,IAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;;AACA,UAAMW,MAAM,GAAG,MAAM;AACnBtB,MAAAA,aAAa,CACXG,QAAQ,KAAK,MAAb,GACIN,QAAQ,CAACyB,MAAT,CAAiBC,GAAD,IAAS;AACvB,eACEA,GAAG,CAAChB,QAAJ,CAAaiB,QAAb,CAAsBjB,QAAtB,KACA,CACEgB,GAAG,CAACE,KAAJ,CAAUC,QAAV,KACA,GADA,GAEAH,GAAG,CAACI,GAAJ,CAAQD,QAAR,EAFA,GAGA,GAHA,GAIAH,GAAG,CAACK,IAAJ,CAASF,QAAT,EALF,EAMEF,QANF,CAMWf,IANX,CADA,IAQAc,GAAG,CAACZ,MAAJ,CAAWa,QAAX,CAAoBb,MAApB,CATF;AAWD,OAZD,CADJ,GAcId,QAAQ,CAACyB,MAAT,CAAiBC,GAAD,IAAS;AACvB,eACEA,GAAG,CAAChB,QAAJ,CAAaiB,QAAb,CAAsBjB,QAAtB,KACAgB,GAAG,CAAClB,EAAJ,CAAOqB,QAAP,GAAkBF,QAAlB,CAA2BnB,EAA3B,CADA,IAEAkB,GAAG,CAACZ,MAAJ,CAAWa,QAAX,CAAoBb,MAApB,CAHF;AAKD,OAND,CAfO,CAAb;AAuBD,KAxBD;;AA0BAW,IAAAA,MAAM;AACP,GA7BQ,EA6BN,CAACf,QAAD,EAAWI,MAAX,EAAmBN,EAAnB,EAAuBI,IAAvB,CA7BM,CAAT;AA+BA,sBACE;AAAS,IAAA,SAAS,EAAC,SAAnB;AAA6B,IAAA,KAAK,EAAC,IAAnC;AAAwC,IAAA,KAAK,EAAE;AAAEoB,MAAAA,QAAQ,EAAE;AAAZ,KAA/C;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,WAAW,EAAErB,WAAxB;AAAqC,UAAA,SAAS,EAAEI;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,QAAQ,EAAET,QADZ;AAEE,UAAA,WAAW,EAAEC,WAFf;AAGE,UAAA,EAAE,EAAEC,EAHN;AAIE,UAAA,KAAK,EAAEC,KAJT;AAKE,UAAA,IAAI,EAAEG,IALR;AAME,UAAA,OAAO,EAAEC,OANX;AAOE,UAAA,MAAM,EAAC;AAPT;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,QAAC,QAAD;AAAU,UAAA,SAAS,EAAET,SAArB;AAAgC,UAAA,QAAQ,EAAEF;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CApFD;;GAAMJ,mB;UASAD,O;;;KATAC,mB;AAsFN,eAAeA,mBAAf","sourcesContent":["import Axios from \"axios\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport BugItems from \"./BugItems\";\r\nimport Navbar from \"./Navbar\";\r\nimport Filterbar from \"./Filterbar\";\r\nimport Searchbar from \"./Searchbar\";\r\nimport useAuth from \"../hooks/useAuth\";\r\n\r\nconst ProgrammerInterface = () => {\r\n  const {\r\n    auth,\r\n    bugsList,\r\n    setBugsList,\r\n    filterList,\r\n    setFilterList,\r\n    isLoading,\r\n    setIsLoading,\r\n  } = useAuth();\r\n\r\n  const [searchBy, setSearchBy] = useState(\"\");\r\n  const [id, setID] = useState(\"\");\r\n  const [severity, setSeverity] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setSearchBy(\"ID\");\r\n    Axios.get(\"http://localhost:3001/getAssignedBugs\", {\r\n      params: {\r\n        firstName: auth.firstName,\r\n        lastName: auth.lastName,\r\n      },\r\n    }).then((response) => {\r\n      setBugsList(response.data);\r\n      setFilterList(response.data);\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(status)\r\n    const filter = () => {\r\n      setFilterList(\r\n        searchBy === \"Date\"\r\n          ? bugsList.filter((bug) => {\r\n              return (\r\n                bug.severity.includes(severity) &&\r\n                (\r\n                  bug.month.toString() +\r\n                  \"/\" +\r\n                  bug.day.toString() +\r\n                  \"/\" +\r\n                  bug.year.toString()\r\n                ).includes(date) &&\r\n                bug.status.includes(status)\r\n              );\r\n            })\r\n          : bugsList.filter((bug) => {\r\n              return (\r\n                bug.severity.includes(severity) &&\r\n                bug.id.toString().includes(id) &&\r\n                bug.status.includes(status)\r\n              );\r\n            })\r\n      );\r\n    };\r\n\r\n    filter();\r\n  }, [severity, status, id, date]);\r\n\r\n  return (\r\n    <section className=\"mx-auto\" fluid=\"md\" style={{ maxWidth: \"800px\" }}>\r\n      <Navbar />\r\n      <Row>\r\n        <Col sm=\"3\">\r\n          <Filterbar setSeverity={setSeverity} setStatus={setStatus} />\r\n        </Col>\r\n        <Col sm=\"9\">\r\n          <Searchbar\r\n            searchBy={searchBy}\r\n            setSearchBy={setSearchBy}\r\n            id={id}\r\n            setID={setID}\r\n            date={date}\r\n            setDate={setDate}\r\n            assign=\"Manager\"\r\n          />\r\n          <BugItems isLoading={isLoading} bugsList={filterList} />\r\n        </Col>\r\n      </Row>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ProgrammerInterface;\r\n"]},"metadata":{},"sourceType":"module"}