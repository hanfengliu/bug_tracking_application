{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lhf13\\\\Desktop\\\\projects\\\\Fullstack\\\\bug_tracking_application\\\\client\\\\src\\\\components\\\\Unauthorized.js\",\n    _s = $RefreshSig$();\n\nimport { useNavigate } from \"react-router-dom\";\nimport useAuth from \"../hooks/useAuth\";\nimport { Card, ButtonGroup, Button, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Unauthorized = () => {\n  _s();\n\n  const {\n    auth\n  } = useAuth();\n  const navigate = useNavigate();\n\n  const goBack = () => {\n    var _auth$roles, _auth$roles2, _auth$roles3;\n\n    if (auth !== null && auth !== void 0 && (_auth$roles = auth.roles) !== null && _auth$roles !== void 0 && _auth$roles.includes(\"manager\")) {\n      navigate(\"/ManagerInterface\");\n    } else if (auth !== null && auth !== void 0 && (_auth$roles2 = auth.roles) !== null && _auth$roles2 !== void 0 && _auth$roles2.includes(\"programmer\")) {\n      navigate(\"/ProgrammerInterface\");\n    } else if (auth !== null && auth !== void 0 && (_auth$roles3 = auth.roles) !== null && _auth$roles3 !== void 0 && _auth$roles3.includes(\"user\")) {\n      navigate(\"/UserForm\");\n    } else {\n      navigate(\"/SignIn\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mx-auto mt-5\",\n    style: {\n      width: \"18rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      as: \"h1\",\n      children: \"Unauthorized\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [\"Your role as \", auth.roles, \" do not have access to the requested page.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            className: \"d-flex\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              onClick: goBack,\n              children: \"Return\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Unauthorized, \"kpIdKPE0ZUcLED1mQ5gP2+nOrp4=\", false, function () {\n  return [useAuth, useNavigate];\n});\n\n_c = Unauthorized;\nexport default Unauthorized;\n\nvar _c;\n\n$RefreshReg$(_c, \"Unauthorized\");","map":{"version":3,"sources":["C:/Users/lhf13/Desktop/projects/Fullstack/bug_tracking_application/client/src/components/Unauthorized.js"],"names":["useNavigate","useAuth","Card","ButtonGroup","Button","Row","Col","Unauthorized","auth","navigate","goBack","roles","includes","width"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,MAA5B,EAAoCC,GAApC,EAAyCC,GAAzC,QAAoD,iBAApD;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAWP,OAAO,EAAxB;AACA,QAAMQ,QAAQ,GAAGT,WAAW,EAA5B;;AACA,QAAMU,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAIF,IAAJ,aAAIA,IAAJ,8BAAIA,IAAI,CAAEG,KAAV,wCAAI,YAAaC,QAAb,CAAsB,SAAtB,CAAJ,EAAsC;AACpCH,MAAAA,QAAQ,CAAC,mBAAD,CAAR;AACD,KAFD,MAEO,IAAID,IAAJ,aAAIA,IAAJ,+BAAIA,IAAI,CAAEG,KAAV,yCAAI,aAAaC,QAAb,CAAsB,YAAtB,CAAJ,EAAyC;AAC9CH,MAAAA,QAAQ,CAAC,sBAAD,CAAR;AACD,KAFM,MAEA,IAAID,IAAJ,aAAIA,IAAJ,+BAAIA,IAAI,CAAEG,KAAV,yCAAI,aAAaC,QAAb,CAAsB,MAAtB,CAAJ,EAAmC;AACxCH,MAAAA,QAAQ,CAAC,WAAD,CAAR;AACD,KAFM,MAEA;AACLA,MAAAA,QAAQ,CAAC,SAAD,CAAR;AACD;AACF,GAVD;;AAYA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,KAAK,EAAE;AAAEI,MAAAA,KAAK,EAAE;AAAT,KAAtC;AAAA,4BACE,QAAC,IAAD,CAAM,MAAN;AAAa,MAAA,EAAE,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,8BACE,QAAC,IAAD,CAAM,IAAN;AAAA,oCACgBL,IAAI,CAACG,KADrB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,GAAD;AAAA,+BACE,QAAC,GAAD;AAAA,iCACE,QAAC,WAAD;AAAa,YAAA,SAAS,EAAC,QAAvB;AAAA,mCACE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,SAAhB;AAA0B,cAAA,OAAO,EAAED,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAlCD;;GAAMH,Y;UACaN,O,EACAD,W;;;KAFbO,Y;AAoCN,eAAeA,YAAf","sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport useAuth from \"../hooks/useAuth\";\r\nimport { Card, ButtonGroup, Button, Row, Col } from \"react-bootstrap\";\r\n\r\nconst Unauthorized = () => {\r\n  const { auth } = useAuth();\r\n  const navigate = useNavigate();\r\n  const goBack = () => {\r\n    if (auth?.roles?.includes(\"manager\")) {\r\n      navigate(\"/ManagerInterface\");\r\n    } else if (auth?.roles?.includes(\"programmer\")) {\r\n      navigate(\"/ProgrammerInterface\");\r\n    } else if (auth?.roles?.includes(\"user\")) {\r\n      navigate(\"/UserForm\");\r\n    } else {\r\n      navigate(\"/SignIn\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"mx-auto mt-5\" style={{ width: \"18rem\" }}>\r\n      <Card.Header as=\"h1\">Unauthorized</Card.Header>\r\n      <Card.Body>\r\n        <Card.Text>\r\n          Your role as {auth.roles} do not have access to the requested page.\r\n        </Card.Text>\r\n        <Row>\r\n          <Col>\r\n            <ButtonGroup className=\"d-flex\">\r\n              <Button variant=\"success\" onClick={goBack}>\r\n                Return\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Unauthorized;\r\n"]},"metadata":{},"sourceType":"module"}